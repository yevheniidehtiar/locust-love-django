# GitHub Actions CI/CD Workflow
name: Django Locust CI

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' # Match the version in Dockerfiles if possible

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ."[dev]"
          pip install -r django-code-smells/django_code_smells/requirements.txt
          pip install -e http_header_profiling_middleware

      - name: Run linters
        run: make lint

  build_images:
    runs-on: ubuntu-latest
    needs: lint # Optional: make it depend on lint passing
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker images
        run: make docker-build

  smoke_test_pr:
    runs-on: ubuntu-latest
    needs: build_images # Depends on images being built
    if: github.event_name == 'pull_request' # Run only for pull requests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker
        # Docker is usually available on GitHub-hosted runners.
        # If specific setup is needed, actions like docker/setup-docker-action could be used.
        # For now, assume 'docker compose' is available.
        run: docker --version && docker compose --version

      - name: Start services
        run: make docker-up

      - name: Verify services (healthcheck)
        # The 'make docker-up' command uses 'docker compose up -d'.
        # Docker Compose v2 automatically waits for containers with healthchecks to be healthy.
        # If a service fails its healthcheck, 'docker compose up' will (or should) error out.
        # We can add an explicit check if needed:
        # run: |
        #   echo "Waiting for Django healthcheck..."
        #   # Loop until Django is healthy or timeout
        #   timeout=120 # 2 minutes
        #   interval=5  # seconds
        #   elapsed=0
        #   while ! docker compose ps | grep django | grep healthy; do
        #     if [ $elapsed -ge $timeout ]; then
        #       echo "Django healthcheck timed out!"
        #       docker compose logs django
        #       exit 1
        #     fi
        #     sleep $interval
        #     elapsed=$((elapsed + interval))
        #     echo "Still waiting for Django... ${elapsed}s"
        #   done
        #   echo "Django service is healthy!"
        #   docker compose logs django
        run: echo "Services started. Healthcheck in docker-compose.yml for Django will be verified by 'docker compose up'."

      - name: Stop services
        run: make docker-down

  test_deploy:
    runs-on: ubuntu-latest
    needs: build_images # Depends on images being built
    if: github.ref == 'refs/heads/master' && github.event_name == 'push' # Run only for pushes to master
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker
        run: docker --version && docker compose --version

      - name: Start services
        run: make docker-up

      - name: Run Locust tests
        run: make locust-ci-run

      - name: Stop services
        run: make docker-down
